// see https://github.com/smarr/are-we-fast-yet/blob/master/benchmarks/Java/src/Permute.java
let
  type vector = array of int
in
  let
    var stringSize := 9
    var count: int := 0
    var v: vector := vector[stringSize] of 0

    function swap(i: int, j: int) =
      let
        var tmp: int := v[i]
      in
        v[i] := v[j];
        v[j] := tmp
      end

    function permute(n: int) = (
      count := count + 1;
      if n <> 0
      then
        let
          var n1: int := n - 1
        in
          permute(n1);
          let
            var i:int := n1
          in
            while i >= 0 do (
              swap(n1, i);
              permute(n1);
              swap(n1, i);
              i := i - 1
            )
          end
        end
    )
  in
    (permute(stringSize);
    print(count);
    print("\n"))
  end
end